%% this script is used to simulate aerial images from EUV mask
clc;
clear;
addpath('..');

%% simulation parameters
% basically unchanged parameters
apiPath = 'C:\Program Files\Panoramic\v700';
setupFile = 'D:\OneDrive\Ptychography\code\Ptychography\data\EM-Suite\mask_EUV.sim';
dataFile = sprintf('../../Aerial images/aerial-images_%s.mat', regexprep(datestr(now, 31), ':', '.'));
lambda_um = 13.5e-3; % DUV
Lo_um =3000; % object distance
Li_um =1000000; % imaging distance
scanSteps = 4; % scaning steps
scanRange_um = 250; % scanning range in pupil space
NAo = 0.05; % Object NA
NAi = sin(atan(Lo_um/Li_um*tan(asin(NAo)))); % imaging NA
nD = 50; % far field sampling
dc_um = 5000; % detector size
df_um =0; % defocus distance
L_nm = 512; % near field xy 
pitch_nm = 150; % feature size
domian_nm = 450; % near field z 
dx_nm =4;% grid size dx/dy nm
dz_nm =1;% grid size dz nm
t_Si_nm = 3.05; % Si thickness
t_Mo_nm = 2.4; % Mo thickness
N = L_nm/dx_nm; % sampling
Ls = N*dc_um/(Li_um/Lo_um);

polarDire = 0; % polarization dirction 0 for X-Polarized, 1 for Y-Polarized

saveConfig = 1; % save configuration
saveData = 0; % save data


% frequently changed parameters
para.domian = domian_nm; 
para.lambda = lambda_um*1000; % wavelength nm
para.L = L_nm;
para.pitch = pitch_nm; 
para.dx = dx_nm; 
para.dz = dz_nm; 
para.t_Si=t_Si_nm;
para.t_Mo=t_Mo_nm;

%% open simulator
PIE.utils.openSimulator(apiPath);

%% load simulation configuration
loadSetup(setupFile);

%% change parameters
PIE.utils.setParameters(para,saveConfig,setupFile);

%% set illumination
dPos = 0:scanRange_um/(scanSteps-1):scanRange_um;
[dm,dn] = meshgrid(dPos-scanRange_um/2,dPos-scanRange_um/2);
theta= atan(sqrt(dm.^2+dn.^2)/Lo_um)/pi*180; % illumination angles
phi = atan2(dm,dn)/pi*180; % illumination azimuthes

[sr,sc] = size(theta);
E = zeros(N,N,sr,sc);
aerialImages = E;
for i= length(sr)
    for j =1:length(sc)
        setVariableValues( 'theta',theta(i,j));
        setVariableValues( 'phi',phi(i,j));
        %% run simulator using TEMPEST
        E(:,:,i,j) = PIE.utils.runSimulator(polarDire);
        %% generate aerial images
        aerialImages(:,:,i,j)=  PIE.utils.getAerialImages(E,Lo_um,NAi,lambda_um,Li_um,dc_um,df_um,N);
    end
end

%% save data
if saveData==1
    save(dataFile, 'para', 'E', 'theta', 'phi','aerialImages');
    for i= length(sr)
        for j =1:length(sc)
            imwrite(mat2gray(aerialImages(:,:,mi,j)),[dataFile(1:end-1),'_',num2str(i),'_',num2str(j),'.bmp']);
        end
    end
end

%% plot result
% figure(2),imagesc(aerialImages(:,:,1)), axis off tight equal; colorbar;